# just to make PodWeaver happy at the moment
package Data::Sah::Manual::TypeX;

=pod

=head1 NAME

Sah::Manual::TypeX - Extending an existing type

=head1 DESCRIPTION

THIS IS A STUB.

Aside from creating a whole new type, an easier thing to do is extend an existing
type with new clause. Basically what we need to do is reopen/augment the emitter
class with appropriate methods.

In this example, we will be adding "is_palindrome" clause to the "str" type. We
will be supporting the Perl, Human, and JS emitters for this clause.

First, create a distribution: Data::Sah::TypeX::str::is_palindrome.

Add something along this line to Palindrome.pm:

 package Data::Sah::Type::str;
 clause is_palindrome => {
     arg     => 'bool',
     ...
 };

 package Data::Sah::Compiler::perl::TH::str;
 sub clause_is_palindrome => sub {
     ...
 };

 package Data::Sah::Compiler::human::TH::str;
 sub clause_is_palindrome => sub {
     ...
 };

 package Data::Sah::Compiler::js::TH::str;
 sub clause_is_palindrome => sub {
     ...
 };

You can also add appropriately for the other compiler you might care about.

=head1 SEE ALSO

L<Data::Sah::Manual::Type>

=cut
